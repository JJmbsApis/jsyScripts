local Player = game.Players.LocalPlayer

local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "Jay's Hub - Fisch", HidePremium = false, SaveConfig = false, ConfigFolder = "OrionTest", IntroEnabled = true, IntroText = "Jay's Hub"})

-- Vari√°veis --
getgenv().autoFarm = false
getgenv().rod = nil
getgenv().pc = false
getgenv().autoFarmType = "Risk"
getgenv().antiAFK = false
getgenv().wow = false
-- Functions --
local TweenService = game:GetService("TweenService")

function moveCharacter(character, targetPosition, duration)
    if not character or not character:FindFirstChild("HumanoidRootPart") then return end
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    local tweenInfo = TweenInfo.new(duration or 0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
    local tween = TweenService:Create(humanoidRootPart, tweenInfo, {CFrame = targetPosition})
    tween:Play()
    return tween
end

function simulateClick()
            local Click = game:GetService("VirtualUser")
            Click:CaptureController() 
            Click:ClickButton1(Vector2.new(100, 100))
end
function simulateClick2()
            local Click = game:GetService("VirtualUser")
            Click:CaptureController() 
            Click:ClickButton2(Vector2.new(100, 100))
end
function checkRods(container)
  task.spawn(function()
    for _, v in pairs(container:GetChildren()) do
      if v:IsA("Tool") and string.find(v.Name, "Rod") or string.find(v.Name, "Sovereign") then
        getgenv().rod = v
      end
    end
  end
  )
end

function createPart()
if not Player.Character:FindFirstChild("wowpart") then
local part = Instance.new("Part")
part.Anchored = true
part.Material = Enum.Material.Plastic
part.CanCollide = true
part.Position = Vector3.new(0,0,0)
part.Parent = Player.Character
part.Size = Vector3.new(10,.5,10)
part.Name = "wowpart"
part.Transparency = 1
else
Player.Character:FindFirstChild("wowpart"):Destroy()
local part = Instance.new("Part")
part.Anchored = true
part.Material = Enum.Material.Plastic
part.CanCollide = true
part.Position = Vector3.new(0,0,0)
part.Parent = Player.Character
part.Name = "wowpart"
part.Size = Vector3.new(10,.5,10)
part.Transparency = 1
end
end

function Notify(t,m,r)
game.StarterGui:SetCore("SendNotification", {
  Title = t;
  Text = m;
  Duration = tostring(r);
})
end

function movePart()
if Player.Character:FindFirstChild("wowpart") then
local targetPos = Vector3.new(Player.Character.HumanoidRootPart.Position.X, 127, Player.Character.HumanoidRootPart.Position.Z)
Player.Character:FindFirstChild("wowpart").Position = targetPos
end
end

function deletePart()
if Player.Character:FindFirstChild("wowpart") then
Player.Character:FindFirstChild("wowpart"):Destroy()
end
end

function cast(rod)
  rod.events.cast:FireServer(100, 1)
end

function configureShakeUI(sUI, sZ, sB)
if sUI then
if sZ then
if sB then
local sBSize = UDim2.new(8, 0, 8, 0)
sB.Transparency = 1
sB.Size = sBSize
end
end
end
end

function reelFunc2()
                    local reel = Player.PlayerGui:WaitForChild("reel")
                    if reel then
                        local PBar = reel:WaitForChild("bar"):FindFirstChild("playerbar")
                        if PBar then
                            PBar.Size = UDim2.new(1, 0, 1.3, 0)
                        end
                    end
end
function reelFunc()
local args = {
    [1] = 100,
    [2] = false
}
game:GetService("ReplicatedStorage"):FindFirstChild("events"):FindFirstChild("reelfinished"):FireServer(unpack(args))
end

-- Tabs
local Home = Window:MakeTab({
  Name = "Home",
  Icon = "rbxassetid://89499372777008",
  PremiumOnly = false
})
local Main = Window:MakeTab({
  Name = "Main",
  Icon = "rbxassetid://120925763817428",
  PremiumOnly = false
})
local Teleport = Window:MakeTab({
  Name = "Teleport",
  Icon = "rbxassetid://117047957531906",
  PremiumOnly = false
})
 
 -- Home
 Home:AddSection({
	Name = "Local Player",
})

Home:AddTextbox({
	Name = "Walkspeed (default 16)",
	Default = "16",
	TextDisappear = false,
	Callback = function(Value)
	Player.Character.Humanoid.WalkSpeed = tonumber(Value)
	Notify("Success!", "WalkSpeed setted to "..Value.."!", 5)
	end	  
})

Home:AddToggle({
    Name = "Walk on Water",
    Default = false,
    Callback = function(Value)
    getgenv().wow = Value
    if Value then
    createPart()
    Notify("Success!", "You can walk on water!", 5)
    end
    while getgenv().wow do
    movePart()
    task.wait(.01)
    if not getgenv().wow then deletePart() break end
    end
end})
 -- Main
 Main:AddSection({
	Name = "Auto Farm",
})
Main:AddDropdown({
    Name = "Auto-farm Type",
    Default = "Risk",
    Options = {"Risk", "Legit"},
    Callback = function(Value)
    getgenv().autoFarmType = Value
    Notify("Success!", "Auto-farm type setted to "..Value.."!", 5)
end})

Main:AddToggle({
    Name = "Auto-farm",
    Default = false,
    Callback = function(Value)
        getgenv().autoFarm = Value
        
        if Value then
            checkRods(Player.Character)
            checkRods(Player.Backpack)
            Notify("Success!", "Auto-farming", 5)
        end
        
        if getgenv().autoFarmType == "Risk" then
        while getgenv().autoFarm and getgenv().rod.Parent == Player.Character do
                  cast(getgenv().rod)
                  print("Casted rod")
                  task.wait(1)

                   local ShakeUi
                   local Safezone
                   local Button
                   while getgenv().rod.values.lure.Value ~= 100 do
                   ShakeUi = Player.PlayerGui:WaitForChild("shakeui")
                   Safezone = ShakeUi:FindFirstChild("safezone")
                   Button = Safezone:FindFirstChild("button")
                   configureShakeUI(ShakeUi, Safezone, Button)
                   simulateClick()
                   task.wait(.001)
                   if not getgenv().autoFarm or getgenv().rod.values.lure.Value == 100 then break end;
                   end
                   print("Shake ended")
                   task.wait(2)
                   reelFunc()
                   print("Reel finished")
                   task.wait(2)
                   if not getgenv().autoFarm then break end;
        end
        elseif getgenv().autoFarmType == "Legit" then
                while getgenv().autoFarm and getgenv().rod.Parent == Player.Character do
                  cast(getgenv().rod)
                  task.wait(1)

                   local ShakeUi
                   local Safezone
                   local Button
                   while getgenv().rod.values.lure.Value ~= 100 do
                   ShakeUi = Player.PlayerGui:WaitForChild("shakeui")
                   Safezone = ShakeUi:FindFirstChild("safezone")
                   Button = Safezone:FindFirstChild("button")
                   configureShakeUI(ShakeUi, Safezone, Button)
                   simulateClick()
                   task.wait(.001)
                   if not getgenv().autoFarm or getgenv().rod.values.lure.Value == 100 then break end;
                   end
                   task.wait(2)
                   reelFunc2()
                   local reel = Player.PlayerGui:FindFirstChild("reel")
                   while reel do
                   reel = Player.PlayerGui:FindFirstChild("reel")
                   task.wait(.001)
                   if not reel then break end;
                   end
                   task.wait(2)
                   if not getgenv().autoFarm then break end;
        end
        end
    end
})

 Main:AddSection({
	Name = "Automatics",
})

Main:AddToggle({
    Name = "Auto Reel",
    Default = false,
    Callback = function(Value)
    getgenv().pc = Value
    Notify("Success!", "Auto-reel setted to "..Value.."!", 5)
    while getgenv().pc do
    reelFunc()
    task.wait(.001)
    end
end})
Main:AddToggle({
    Name = "Anti afk",
    Default = false,
    Callback = function(Value)
    getgenv().antiAFK = Value
    Notify("Success!", "Anti-afk setted to "..Value.."!", 5)
    while getgenv().antiAFK do
    simulateClick2()
    task.wait(120)
    end
end})

Main:AddSection({
	Name = "Sell",
})

Main:AddButton({
	Name = "Sell All",
	Callback = function()
	local initialPosition = Player.Character.PrimaryPart.CFrame
	local targetPosition = CFrame.new(Vector3.new(463, 150, 229))
	local character = Player.Character or Player.CharacterAdded:Wait()
	Notify("Processing...", "Processing sell all system...", 5)
    moveCharacter(character, targetPosition, .1)
    task.wait(.5)
	workspace.world.npcs:WaitForChild("Marc Merchant").merchant.sellall:InvokeServer()
	task.wait(.5)
	moveCharacter(character, initialPosition, .1)
	Notify("Success!", "All items have been sold!", 5)
end})
Main:AddButton({
	Name = "Sell in hand",
	Callback = function()
	local initialPosition = Player.Character.PrimaryPart.CFrame
	local targetPosition = CFrame.new(Vector3.new(463, 150, 229))
	local character = Player.Character or Player.CharacterAdded:Wait()
	Notify("Processing...", "Processing sell system...", 5)
    moveCharacter(character, targetPosition, .1)
    task.wait(.5)
	workspace.world.npcs:WaitForChild("Marc Merchant").merchant.sell:InvokeServer()
	task.wait(.5)
	moveCharacter(character, initialPosition, .1)
	Notify("Success!", "This item have been sold!", 5)
end})

Main:AddSection({
	Name = "Buy",
})

Main:AddButton({
	Name = "Buy Enchant Relic",
	Callback = function()
	local initialPosition = Player.Character.PrimaryPart.CFrame
	local targetPosition = CFrame.new(Vector3.new(-1145, 235, -1100))
	local character = Player.Character or Player.CharacterAdded:Wait()
	Notify("Processing...", "Buying enchant relic...", 5)
    moveCharacter(character, targetPosition, .1)
    task.wait(.5)
	workspace:WaitForChild("world"):WaitForChild("npcs"):WaitForChild("Merlin"):WaitForChild("Merlin"):WaitForChild("power"):InvokeServer()
	task.wait(.5)
	moveCharacter(character, initialPosition, .1)
	Notify("Success!", "The relic was purchased!", 5)
end})
Main:AddButton({
	Name = "Buy Luck Boost",
	Callback = function()
	local initialPosition = Player.Character.PrimaryPart.CFrame
	local targetPosition = CFrame.new(Vector3.new(-1145, 235, -1100))
	local character = Player.Character or Player.CharacterAdded:Wait()
    moveCharacter(character, targetPosition, .1)
    Notify("Processing...", "Buying luck boost...", 5)
    task.wait(.5)
	workspace:WaitForChild("world"):WaitForChild("npcs"):WaitForChild("Merlin"):WaitForChild("Merlin"):WaitForChild("luck"):InvokeServer()
	task.wait(.5)
	moveCharacter(character, initialPosition, .1)
	Notify("Success!", "The boost was purchased!", 5)
end})	
Main:AddButton({
	Name = "Buy Sundial Totem",
	Callback = function()
	local targetPosition = CFrame.new(Vector3.new(-1143, 134, -1077))
	local character = Player.Character or Player.CharacterAdded:Wait()
    moveCharacter(character, targetPosition, .1)
    Notify("Success!", "You have been teleported to purchase the sundial totem!", 5)
end})
Main:AddButton({
	Name = "Buy Aurora Totem",
	Callback = function()
	local targetPosition = CFrame.new(Vector3.new(-1813, -139, -3280))
	local character = Player.Character or Player.CharacterAdded:Wait()
    moveCharacter(character, targetPosition, .1)
    Notify("Success!", "You have been teleported to purchase the aurora totem!", 5)
end})

	-- Teleports
Teleport:AddSection({
  Name = "Teleports"
})


Teleport:AddDropdown({
    Name = "Teleport Islands",
    Default = "None",
    Options = {
        "None",
        "Desolate Deep",
        "Forsaken Shores",
        "Gamma Grotto",
        "Keepers Altar",
        "Moosewood",
        "Mushgrove Swamp",
        "Roslit Bay",
        "Snowcap Island",
        "Statue Of Sovereignty",
        "Sunstone Island",
        "Terrapin Island",
        "The Depths",
        "Vertigo",
        "Ancient Isles",
        "Ancient Archives"
    },
    Callback = function(selectedLocation)
        local tabletps = {
            ["None"] = nil,
            ["Desolate Deep"] = Vector3.new(-1657, -213, -2854),
            ["Forsaken Shores"] = Vector3.new(-2487, 143, 1557),
            ["Gamma Grotto"] = Vector3.new(2241, -803, 1042),
            ["Keepers Altar"] = Vector3.new(1306, -804, -198),
            ["Moosewood"] = Vector3.new(389, 135, 241),
            ["Mushgrove Swamp"] = Vector3.new(2433, 137, -682),
            ["Roslit Bay"] = Vector3.new(-1463, 142, 714),
            ["Snowcap Island"] = Vector3.new(2692, 156, 2404),
            ["Statue Of Sovereignty"] = Vector3.new(20, 151, -1025),
            ["Sunstone Island"] = Vector3.new(-1145, 235, -1100),
            ["Terrapin Island"] = Vector3.new(-164, 157, 1934),
            ["The Depths"] = Vector3.new(952, -711, 1233),
            ["Vertigo"] = Vector3.new(-114, -514, 1072),
            ["Ancient Isles"] = Vector3.new(6072, 196, 297),
            ["Ancient Archives"] = Vector3.new(-3162, -746, 1699),
        }

        if selectedLocation ~= "None" then
        local targetPosition = CFrame.new(tabletps[selectedLocation])
            local character = Player.Character or Player.CharacterAdded:Wait()
            moveCharacter(character, targetPosition, .1)
            Notify("Success!", "You have been teleported to "..selectedLocation.."!", 5)
        end
        end
})

Teleport:AddDropdown({
    Name = "Teleport Spots",
    Default = "None",
    Options = {
        "None",
        "The Depths Spot",
        "Ancient Isles Spot",
    },
    Callback = function(selectedLocation)
        local tabletps = {
            ["None"] = nil,
            ["The Depths Spot"] = Vector3.new(525, -733, 1034),
            ["Ancient Isles Spot"] = Vector3.new(5582, 135, -55)
        }

        if selectedLocation ~= "None" then
        local targetPosition = CFrame.new(tabletps[selectedLocation])
            local character = Player.Character or Player.CharacterAdded:Wait()
            moveCharacter(character, targetPosition, .1)
            Notify("Success!", "You have been teleported to "..selectedLocation.."!", 5)
        end
        end
})


OrionLib:Init()
Notify("Success!", "Script loaded!", 5)

local CoreGui = game:GetService("CoreGui") do
local orio
task.spawn(function()
for i, v in pairs(CoreGui:GetDescendants()) do
if v.Name == "Orion" then
orio = v
end
end
end)
local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "ToggleOrion"
    ScreenGui.Parent = CoreGui
    ScreenGui.DisplayOrder = math.huge

    local screenSize = workspace.CurrentCamera.ViewportSize
    local smallerDimension = math.min(screenSize.X, screenSize.Y)
    local scaleFactor = smallerDimension / screenSize.X

    local Button = Instance.new("ImageButton")
    Button.Name = "ToggleButton"
    Button.Size = UDim2.new(0, smallerDimension * 0.15, 0, smallerDimension * 0.15)
    Button.Position = UDim2.new(1, -110, 0, 10)
    Button.AnchorPoint = Vector2.new(1, 0)
    Button.BackgroundColor3 = Color3.fromRGB(95, 2, 31)
    Button.Image = "rbxassetid://96277145025405"
    Button.Parent = ScreenGui
    Button.Draggable = true
    Button.ZIndex = math.huge
    
    Button.MouseButton1Click:Connect(function()
        print("Toggled UI!")
        if orio then
            orio.Enabled = not orio.Enabled
        end
    end)
end
